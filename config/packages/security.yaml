security:
    # Hashers for passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # User provider
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            entry_point: App\Security\AppCustomAuthenticator
            form_login:
                login_path: app_login
                check_path: app_login_check
                success_handler: App\Security\LoginSuccessHandler # Use the new success handler here
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\AppCustomAuthenticator
            logout:
                path: app_logout
                target: app_login # Redirect after logout
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                always_remember_me: true

    role_hierarchy:
        ROLE_MOD: [ROLE_USER]
        ROLE_ADMIN: [ROLE_MOD]

    access_control:
        - { path: ^/private, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/mod, roles: ROLE_MOD }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
